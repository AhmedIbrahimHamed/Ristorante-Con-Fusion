{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/DishDetailComponent.js","components/ContactComponent.js","components/AboutUsComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/Dishes.js","redux/Comments.js","redux/Promotions.js","redux/Leaders.js","redux/Form.js","App.js","redux/configureStore.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","Card","to","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","dishes","isLoading","errMess","menu","map","key","Breadcrumb","BreadcrumbItem","active","Header","state","isNavOpen","isModalOpen","toggleNav","bind","toggleModal","handleLogin","this","setState","event","alert","username","value","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","onClick","NavbarBrand","href","height","Collapse","isOpen","navbar","Nav","NavItem","Button","outline","Jumbotron","Modal","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","innerRef","input","check","color","Component","Footer","RenderCard","item","in","transformProps","exitTransform","CardBody","designation","CardSubtitle","CardText","description","Home","dishesLoading","dishErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","maxLength","len","val","length","RenderDish","top","RenderComments","comments","postComment","dishId","resultComments","commentList","comObj","date","Date","toDateString","comment","author","CommentForm","handleCommentSumbit","values","rating","Fragment","Row","md","Col","xs","select","model","text","validators","minLength","show","messages","textarea","rows","DishDetail","required","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","newFeedback","firstname","lastname","telnum","email","agree","contactType","message","console","log","postFeedback","resetFeedbackForm","role","placeholder","size","offset","checkbox","RenderLeader","Media","left","object","body","heading","About","leaders","commentsDiv","list","CardHeader","title","addDishes","payload","dishesFailed","errMsg","commentsFailed","errmess","addComments","addComment","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","catch","actions","reset","feedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","basename","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5a8b8ab.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'https://ahmed-json-server.herokuapp.com/';","import React from 'react';\r\nimport {\r\n    Card, CardImg, CardImgOverlay,\r\n    CardTitle, Breadcrumb, BreadcrumbItem\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\nfunction RenderMenuItem({ dish }) {\r\n    return (\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`} >\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu = (props) => {\r\n\r\n    if (props.dishes.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dishes.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if(props.dishes.dishes){\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-1\" key={dish.id}>\r\n                    <RenderMenuItem dish={dish} />\r\n                </div>\r\n            );\r\n        });\r\n        return (\r\n            <div className=\"container justify-content-center\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","import React,{Component} from 'react'\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n      }\r\n\r\n      toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n      }\r\n\r\n      toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n\r\n      handleLogin(event) {\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        this.toggleModal();\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                            </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input} />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                        innerRef={(input) => this.remember = input} />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><Link to='/home'>Home</Link></li>\r\n                            <li><Link to='/aboutus'>About Us</Link></li>\r\n                            <li><Link to='/menu'>Menu</Link></li>\r\n                            <li><Link to='/contactus'>Contact Us</Link></li>\r\n                        </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2020 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle\r\n} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({ item, isLoading, errMess }) {\r\n    if (isLoading) {\r\n        return (\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return (\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else if (item != null) {\r\n        return (\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction Home(props) {\r\n    return (\r\n        <div className=\"container justify-content-center\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react'\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle, Breadcrumb, BreadcrumbItem, Modal, ModalBody, ModalHeader, Button, Row, Col, Label\r\n} from 'reactstrap'\r\nimport { LocalForm, Control, Errors } from 'react-redux-form'\r\nimport { Link } from 'react-router-dom'\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nfunction RenderDish({ dish }) {\r\n    return (\r\n        <Card>\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        </Card>\r\n    )\r\n}\r\n\r\nfunction RenderComments({ comments, postComment, dishId }) {\r\n    var resultComments = <h3>Comments</h3>\r\n    if (comments.length) {\r\n        let commentList = comments.map(comObj => {\r\n            var date = new Date(comObj.date).toDateString();\r\n            return (\r\n                <Fade in key={comObj.id}>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li>{comObj.comment}</li>\r\n                        <li>-- {comObj.author} ,{date}</li>\r\n                    </ul>\r\n                </Fade>)\r\n        });\r\n        resultComments = <div>\r\n            <h3>Comments</h3>\r\n            <Stagger in>\r\n                {commentList}\r\n            </Stagger>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {resultComments}\r\n            <CommentForm dishId={dishId} postComment={postComment} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nclass CommentForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleCommentSumbit = this.handleCommentSumbit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleCommentSumbit(values) {\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n        this.toggleModal();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Button outline onClick={this.toggleModal}><i className=\"fa fa-edit fa-lg\"></i> Submit Comment</Button>\r\n                <div className=\"col-md-9 mb-3\">\r\n                    <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                        <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                        <ModalBody>\r\n                            <LocalForm onSubmit={(values) => this.handleCommentSumbit(values)}>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor={\"rating\"} md={3}>Rating</Label>\r\n                                    <Col xs={12}>\r\n                                        <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\r\n                                            className=\"form-control\">\r\n                                            <option>1</option>\r\n                                            <option>2</option>\r\n                                            <option>3</option>\r\n                                            <option>4</option>\r\n                                            <option>5</option>\r\n                                        </Control.select>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor={\"author\"} md={3}>Your Name</Label>\r\n                                    <Col xs={12}>\r\n                                        <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                            className=\"form-control\"\r\n                                            validators={{ minLength: minLength(3), maxLength: maxLength(15) }} />\r\n                                        <Errors className=\"text-danger\"\r\n                                            model=\".author\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                minLength: 'Must be greater than 2 characters ',\r\n                                                maxLength: 'Must be 15 characters or less '\r\n                                            }} />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor={\"comment\"} md={3}>Comment</Label>\r\n                                    <Col xs={12}>\r\n                                        <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                            className=\"form-control\" rows={6} />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Col md={10}>\r\n                                        <Button type=\"submit\" color=\"primary\">\r\n                                            Submit\r\n                                    </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </LocalForm>\r\n                        </ModalBody>\r\n                    </Modal>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst DishDetail = (props) => {\r\n\r\n    if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderDish dish={props.dish} />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderComments comments={props.comments}\r\n                            postComment={props.postComment}\r\n                            dishId={props.dish.id}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default DishDetail \r\n","import React, { Component } from 'react';\r\nimport {\r\n    Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label\r\n} from 'reactstrap';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        let newFeedback = {\r\n            firstname: values.firstname,\r\n            lastname: values.lastname,\r\n            telnum: values.telnum,\r\n            email: values.email,\r\n            agree: values.agree,\r\n            contactType: values.contactType,\r\n            message: values.message\r\n        }\r\n        console.log('Current State is: ' + newFeedback);\r\n        this.props.postFeedback(newFeedback);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"skype\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 2 characters ',\r\n                                            maxLength: 'Must be 15 characters or less '\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 6, offset: 2 }}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                            /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent'\r\nimport { baseUrl } from '../shared/baseUrl'\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\n\r\nfunction RenderLeader({ leader }) {\r\n    return (\r\n        <Media className=\"mt-5\">\r\n            <Media left className=\"mr-5\">\r\n                <Media className=\"leader-image\" object src={baseUrl + leader.image} alt={leader.name} />\r\n            </Media>\r\n            <Media body>\r\n                <Media heading>\r\n                    {leader.name}\r\n                </Media>\r\n                <Media className=\"mt-2\">\r\n                    {leader.designation}\r\n                </Media>\r\n                <p className=\"mt-3\">{leader.description}</p>\r\n            </Media>\r\n        </Media>);\r\n\r\n}\r\n\r\nfunction About({ leaders, isLoading, errMess }) {\r\n\r\n    let commentsDiv = null;\r\n    if (isLoading) {\r\n        commentsDiv = <div>\r\n            <Loading />\r\n        </div>\r\n    } else if (errMess) {\r\n        commentsDiv = <h4>{errMess}</h4>\r\n    } else if (leaders != null) {\r\n        commentsDiv = <Media list>\r\n            <Stagger in>\r\n                {leaders.map(leader => <Fade key={leader.id}>\r\n                    <RenderLeader leader={leader} />\r\n                </Fade>)}\r\n            </Stagger>\r\n        </Media>\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-8\">\r\n                    {commentsDiv}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import * as ActionTypes from './ActionTypes'\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n// Thunk functions that do async tasks\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const postFeedback = (values) => \r\n(dispatch) => {\r\n    const newFeedback = {\r\n        firstname: values.firstname,\r\n        lastname: values.lastname,\r\n        telnum: values.telnum,\r\n        email: values.email,\r\n        agree: values.agree,\r\n        contactType: values.contactType,\r\n        message: values.message\r\n    };\r\n    newFeedback.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(feedback => {alert('Your feedback has been Posted Successfully :' + JSON.stringify(feedback));})\r\n    .catch(error =>  { console.log('post feedback', error.message); alert('Your feedback could not be posted\\nError: '+error.message); });\r\n}\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errMess = new Error(error.message);\r\n            throw errMess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + \"leaders\")\r\n    .then(response => {\r\n        if(response.ok){\r\n            return response;\r\n        }else{\r\n            let error = new Error(\"Error\" + response.status + \":\" + response.statusText)\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        let errMess = new Error(error.message);\r\n        throw errMess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error)));\r\n};\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING,\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const dishesFailed = (errMsg) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errMsg\r\n})\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_LOADING = 'LEADERS-LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\n","import React, { Component } from 'react';\r\nimport Menu from './MenuComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport DishDetail from './DishDetailComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutUsComponent';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        promotions: state.promotions,\r\n        leaders: state.leaders\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n    fetchDishes: () => { dispatch(fetchDishes()) },\r\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\r\n    fetchComments: () => dispatch(fetchComments()),\r\n    fetchPromos: () => dispatch(fetchPromos()),\r\n    fetchLeaders: () => dispatch(fetchLeaders()),\r\n    postFeedback: (values) => dispatch(postFeedback(values))\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromos();\r\n        this.props.fetchLeaders();\r\n    }\r\n\r\n    render() {\r\n        const DishWithId = ({ match }) => {\r\n            return (\r\n                <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\r\n                    isLoading={this.props.dishes.isLoading}\r\n                    errMess={this.props.dishes.errMess}\r\n                    comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\r\n                    commentsErrMess={this.props.comments.errMess}\r\n                    postComment={this.props.postComment}\r\n                />\r\n            );\r\n        };\r\n\r\n        const AboutUsWithLeaders = () => {\r\n            return (\r\n                <About\r\n                leaders={this.props.leaders.leaders}\r\n                isLoading={this.props.leaders.isLoading}\r\n                errMess={this.props.leaders.errMess}/>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <TransitionGroup>\r\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                        <Switch>\r\n                            <Route path='/home' component={() => <Home\r\n                                dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n                                dishesLoading={this.props.dishes.isLoading}\r\n                                dishErrMess={this.props.dishes.errMess}\r\n                                promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n                                promoLoading={this.props.promotions.isLoading}\r\n                                promoErrMess={this.props.promotions.errMess}\r\n                                leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n                                leaderLoading={this.props.leaders.isLoading}\r\n                                leaderErrMess={this.props.leaders.errMess}\r\n                            />} />\r\n                            <Route exact path='/aboutus' component={AboutUsWithLeaders} />\r\n                            <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                            <Route path='/menu/:dishId' component={DishWithId} />\r\n                            <Route exact path='/contactus' component={() => <Contact\r\n                                resetFeedbackForm={this.props.resetFeedbackForm}\r\n                                postFeedback = {this.props.postFeedback} />} />\r\n                            <Redirect to=\"/home\" />\r\n                        </Switch>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n                <Footer />\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes'\r\n\r\nexport const Dishes = (state = {isLoading: true, errMess: null, dishes: []}, action) =>{\r\n    switch(action.type){\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []};\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, dishes: []};\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    promotions: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return { ...state, isLoading: false, errMess: null, promotions: action.payload };\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, promotions: [] }\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes'\r\n\r\nexport const Leaders = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []},\r\n    action) =>{\r\n    switch(action.type){\r\n        case ActionTypes.ADD_LEADERS:\r\n            return { ...state, isLoading: false, errMess: null, leaders: action.payload };\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, leaders: [] }\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, {Component} from 'react';\nimport './App.css';\nimport Main from './components/MainComponent';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <Provider store={store}>\n        <Router basename=\"/\">\n          <div className=\"App\">\n            <Main />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n\n}\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport { Dishes } from './Dishes';\r\nimport { Comments } from './Comments';\r\nimport { Promotions } from './Promotions';\r\nimport { Leaders } from './Leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport {InitialFeedback} from './Form'\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            leaders: Leaders,\r\n            promotions: Promotions,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}